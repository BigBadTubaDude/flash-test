@import '~antd/dist/antd.css';

/*********Variables*/
:root {
  --panel-1-width: 50vw;
  --panel-2-width: 50vw;
  --bar-type-card-width: calc(var(--panel-1-width) / 3.8);
  --text-color: rgb(255,255,255);
  --card-text-color: rgb(245,245,245);
  --background-color:rgb(40, 44, 52);
  --needs-attention-color: rgb(185, 1, 1);
  --card-background: rgb(60,60,60);
  --radio-background-panel2: rgb(170,170,170);
}

html, body {
  overflow: hidden;
}
#flash  {
  text-align: center;
  background-color: var(--background-color);
}
.incompleteField  {
  box-shadow: rgba(209, 20, 20, 0.3) 0px 2px 60px 2px;
  border-color: rgb(209,20,20,0.2);
}
.incompleteFieldExtra {
  z-index: -2;
  box-shadow: rgba(209, 20, 20, 0.3) 0px 2px 60px 10px;
  border-color: rgb(209,20,20,0.2);
}
.incompleteFieldParentOfParent *:first-child {
  box-shadow: rgba(209, 20, 20, 0.3) 15px 2px 100px 5px;
  border-color: rgb(209,20,20,0.2);

}.incompleteFieldParentOfParent *:nth-child(2) {
  box-shadow: rgba(209, 20, 20, 0.3) -15px 2px 100px 5px;
  border-color: rgb(209,20,20,0.2);
}

.appContainer {
  display: grid;
  grid-template-columns: var(--panel-1-width) 1fr;
}
.Panel1 {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: var(--panel-1-width);
  justify-content: center;
  font-size: calc(10px + 2vmin);
}

/*****************Panel 1 header*/
.panel1Header {
  display: flex;
  flex-direction: row;
  width: 105%;
  justify-content: space-evenly;
  justify-items: stretch;
  align-items: stretch;
  height: 75px;
  font-size: calc(15px + 2vmin);
  color: var(--text-color);
  padding-bottom: 20px;
}
/*First section of header*/
.P1HeaderQuarter1 {
  align-self: flex-end;
  display: flex;
  flex-direction: column;
}
.P1HeaderQuarter1 > :first-child { /* top part of first quarter of header for Panel 1*/
  transform: translate(10px, -50%);
}
/*Material toggle button and h1 display*/
.materialSelectSection {
  display:flex;
  flex-direction: column;
  width:4em;
  height: 2.5em;
  position: relative;
  align-items: center;
}
.materialSelectSection > h1 {/*Material label*/
  /* height: 26px; */
  width: 4em;
  font-size: calc(8px + 2vmin);
  color: var(--text-color);

  
  
  /* content:" "; */
}
.materialRadio { /*Al/CU selector*/
  position: absolute;
  bottom:0;
  left:0;
  right:0;
}

/*******************Second Section of Header*/
.P1HeaderQuarter2 {
  align-self: center;
  display: grid;
  transform: translate(0, -60px);
  grid-template-columns: 100px 100px;
  grid-template-rows: 100px 30px;
  justify-items: center;
}
.P1HeaderQuarter2 > * { /* 2 divs each holding temp/humidity h2s and thier input boxes*/
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;

}
.P1HeaderQuarter2 input { /*Text inputs for temp and humidity*/
  width: 2.0em;
  height: 1.5em;
  color: black;
  font-size: .75em;
  
}
.P1HeaderQuarter2 > div p { /* % and F after humidity and temp inputs*/
  /* position: absolute; */
  /* right: 0;
  bottom: 20px; */
  margin: 0;
  font-size: .9em;
}
.temp > h2, .humidity > h2{ /*h2s "temp" and "humidity"*/
  color: white;
  font-size: .75em;
}
.temp {
  grid-column: 1 / 2;
}
.humidity {
  grid-column: 2 / 3;
}
.temp div , .humidity div {
  display: flex;
  align-items: center;
  gap: 5px;
}


/*************BAR TYPE*/
h1.barTypeh1 { /*Bar type label*/
  width: 8.5em;
  font-size: calc(10px + 2vmin);
  color: var(--text-color);
  margin-left: 10px;
  margin-top: 10px;
  grid-column: 1 / 3;

  
}
/*******************Third Section of Header*/
.P1HeaderQuarter3 { /*Third section of P1 header*/
  align-self: flex-end;
}
.P1HeaderQuarter3 h3 { /*Width select label "Width"*/
  color: var(--card-text-color);
  margin: 0;
  font-size: 1em;
}
.P1HeaderQuarter3  select { /*Width select box*/
  width: 2.8em;
  height: 1.5em;
  color: black;
  font-size: .75em;
}
.P1HeaderQuarter3 > div.widthSelectContainer { /*Contains "Width" label and width dropdown selector*/
  transform: translate(0, -19px);
  /* display: flex;
  justify-content: space-evenly;
  align-items: center; */

}
/******************DEFECT COUNT SECTION*/
.defectCountSection {
  display: flex;
  width: 200px;
  align-items: stretch;
  justify-content: space-between;
}
.defectCountSection > h3 {
  font-size: calc(5px + 2vmin);
  color: var(--text-color);
  width: 4em;
}
.withLabel {
  visibility: hidden;
}
.currentDefectCountInput { 
  width: 45px;
  height: 40px;
  color:black;
  text-align: center;
  margin-right: 9px;
}


input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {/*Hides the arrow buttons on number of defects number text input box*/
  display: none;
}
.rackPositionSection { /*Contains Rack radios, "on rack", and reset button......ALSO NOW CONATAINS Phase radios*/ 
  display: flex;
  flex-direction: column;
  position: relative;
  align-self: flex-end;
  align-items: center;
}
.rackPositionSection > * {
  margin-top: 5px;
  margin-bottom: 0;
}
.rackPositionRadioButtons, .phaseRadioButtons {
  font-size: .5em;
  line-height: 1.4;
  align-self: center;
  width:auto;
  display: flex;
  gap: 2px;
  
}

.rackPositionRadioButtons > label {
  padding-left: 2.5px;
  cursor: pointer;
}

button.rackResetButton{ /*rack position reset button*/

  bottom: 0;
  right: 0;
  margin-top: 13px ;
  background-color: var(--card-background);
  border-color: var(--text-color);

  width: 6em;
}

button.rackResetButton > span { /*text span inside reset button*/
  font-size: 1em;
  color: var(--text-color);
  text-align: center;
  inset: 0;
}
/*These effects make clear that Reset is clickable while Unknown is not*/
button.rackResetButton:hover {
  background-color: rgb(70,70,70);
  border-color: rgb(255,255,255);
  /* filter: opacity(1.6) */
}
button.rackResetButton:active {
  background-color: rgb(55,55,55);
  border-color: rgb(240,240,240);  
}
button.rackResetButton:focus {
  background-color: var(--card-background);
  border-color: var(--text-color);
}
/* Keeps Unknown label from acting like a clickable button when hovered over*/
button.noHighlight:hover { 
  background-color: var(--card-background);
  border-color: var(--text-color);
  /* cursor: default; */
}
button.noHighlight:focus { 
  background-color: var(--card-background);
  border-color: var(--text-color);
  /* cursor: default; */
}
.rackPositionSection > h3 { /* "on rack*/
  font-size: calc(3px + 2vmin);
  color: var(--text-color);
  text-align: center;
  font-size: .6em;
}



/******************BAR TYPE CARD CONTAINER*/
.barTypeCardContainer {
  display: grid;
  gap: 1.5rem;
  /* grid-template-columns: var(--bar-type-card-width) var(--bar-type-card-width) var(--bar-type-card-width); */
  grid-template-columns: repeat(6, 1fr);
  justify-content: center;
}
.barTypeCardContainer > * {
  height: 2.5em;
  background-color: var(--card-background);
  width: var(--bar-type-card-width);
  display: grid;
  grid-template-columns: 50% 50%;
  grid-template-rows: 55% 50%;
  margin-top: 4px;
  align-items: center;
}
.barTypeCard {
  grid-column: span 2;
  cursor: pointer;
  
}


.barTypeCard > h1 {
  color: var(--card-text-color);

}
.barTypeCard:nth-last-child(2):nth-child(3n + 1) {/*Second to last item if there are two widows*/
  grid-column-end: 4;
}
.barTypeCard:last-child:nth-child(3n - 1) { /*last item if there are 2 widows*/
  grid-column-end: -2;
}
.barTypeCard:last-child:nth-child(3n - 2) { /*last item if one widow*/
  grid-column-end:  5;
}
/**********************ADD BAD BAR BUTTON*/
button.addBarHidden { /*Submit button when fields are not filled out*/
  visibility: hidden;
}
button.addBarShow {
  visibility: visible;
}
button.showSubmit { /*Shows submit button if review form is up*/
  display: block;
  margin: 0;
}
button.displayNone {
  display: none;
}
button.reviewShow {
  visibility: visible;
}
button.reviewHidden {
  visibility: hidden;
}
button.backButton {
  grid-template-rows: 1fr;
}
.buttonsContainer {
  position:absolute;
  bottom: 4%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 40%;
}
.reviewButton {
  background-color: var(--card-text-color);
  color: var(--background-color);
  font-weight: 400;
  border: 1px solid black;
  border-radius: 5px;
  width: 7em;
  cursor: pointer;
  margin-inline: 30px;
  align-items: center;
  font-size: 1em;
  z-index: 3;
}
.hideAddButton { /*Hides "Add Bar" button when review page is up*/
  display: none;
}
/*****************POPUP REVIEW FORM*/
.popupForm {
  display: none;
}
.showReviewForm {
  display: block;
  position: absolute;
  bottom: -20%;
  left: 0%;
  z-index: 2;
  background-color: var(--card-background);
  border: 3px solid var(--radio-background-panel2);
  border-radius: 10px;
  width: 88vw;
  height: 90vh;
  /* max-height: 400px; */
  display:grid;
  overflow-y: auto;
  grid-template-columns: 25% 75%;
  grid-template-rows: 100%;
}


/*Popup form parts*/ 
/*Popup form list of bars and defects side*/
.defectReviewContainer { /*Holds Defects for date h1 and ul of each bar and defect*/
  display: flex;
  flex-direction: column;
  height: 100%;
}
.defectReviewContainer > h1{ /*"Defects for {date}" header*/
  color: var(--card-text-color);
}
ul.defectReviewList { /*List of bar/defect groups on review page*/
  overflow-y: auto;
  height: 82%;
  margin-right: 12px;
  margin-bottom: 5px;
  padding-left: 0px;
}
.defectReviewList > div:not(:last-child):after { /*adds an element between each bar/defect group. only puts them between and not before first or after last*/
  content: "";
  background-color: var(--radio-background-panel2);
  height: 1px;
  width: 80%;
  margin: auto;
  margin-block: 25px;
}
.reviewFormListItem { /*Individual bar/defect group item on review page*/
  list-style: none;
  display: grid;
}
.defectiveBar {/*Each individual defective bar item on the review page*/
  display:flex;
  gap: 20px;
  justify-content: space-evenly;
}
.defectiveBar > * { /*each text item in each bar item on review page*/
  color:var(--card-text-color);
  font-size: 1.2em;
}
.reviewFormDefectItem { /*individual defect items on review page*/
  display:grid;
  grid-template-columns: repeat(5, 1fr);
  background-color: var(--radio-background-panel2);
  margin-inline: 50px; 
  padding-inline: 25px;
  padding-top: 6px;
  align-items: center;
  justify-items: center;
  text-align: center;
}
li.reviewFormDefectItem:nth-of-type(2) { /*First defect item of each bar*/ 
  border-radius: 8px 8px 0 0;
}
.reviewFormDefectItem:last-child { /*last defect item of each bar*/
  border-radius: 0 0 8px 8px;
}
.reviewFormDefectItem:last-child:nth-of-type(2) { /*Defect item when its the only defect of a bar*/
  border-radius: 8px 8px 8px 8px;
}
.reviewFormDefectItem > h3:last-child{ /*Last h3 of each defect (defectType)*/
  grid-column: span 2;
} 


/*Popup form User, Date, and total bars side*/
.textInputContainer { /*main container*/
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: space-evenly;
  align-items: center;
}
.textInputContainer > * { /*each input field on review page*/
  display: grid;
  grid-template-rows: 1fr 1fr;
  width: 80%;
  margin-top: 30px;
}

.textInputContainer > div > label{ /*Input labels on review*/
  color: var(--card-text-color);
}
.userNameInputFieldContainer > input { /*user name input field on review page*/
  width: 60%;
  justify-self: center;
  text-align: center;

}
.submitDateInputFieldContainer > input { /*Date input field on review page*/
  width: 70%;
  text-align: center;
  justify-self: center;
}
.textInputContainer > .totalDayBarsInputFieldContainer { /*Total Barsinput group. Individually overrides grid*/
  grid-template-columns: 20% 80%;
}
.textInputContainer > .totalDayBarsInputFieldContainer > label{ /*Input label for total bars on review page*/
  grid-column-start: span 2;
}
.textInputContainer > .totalDayBarsInputFieldContainer > input { /*input for total bars on review page*/
  grid-column-start: 1;
  text-align: center;
  /* color: black; */
}
.textInputContainer > .totalDayBarsInputFieldContainer > button { /*"Change total" button for total bars on review page*/
  /* color: black; */
}
.totalDayBarsDiv { /*Container of total day bar count display, buttons, and label*/
  position: relative;
  display: flex;
  margin-inline: 30px;
}
/*Total days div on review page*/
.totalDayBarsLabel { /*Label for total day bars count input/display on user main page*/
  position: absolute;
  font-size: .9em;
  color: var(--card-text-color);
  width: 8em;
  top:-40px;
  left: 50%;
  transform: translate(-50%, 0);
}
.finalSubmitButton {
  display: none;
}


.reviewButton:hover, .totalInputButton:hover { /*Hover for buttons at bottom of Panel 1*/
  filter:brightness(1.1);
}
.reviewButton:active,  .totalInputButton:active{ /*active for buttons at bottom of Panel 1*/
  background-color: rgb(200,200,210); 
}
.totalBarsInput { /* readonly input for total number of daily bars. After .buttonsContainer so width specificity will take precidence */
  width: 60px;
  height: 40px;
  text-align: center;
  margin:0;
  border: 1px solid black;
  border-left: none;
  border-right: none;
  border-radius: 0;
}
.totalInputButton { /*Increase and decrese buttons for total bars display input*/
  width: 45px;
  height: 40px;
  border: 1px solid black;
  text-align: center;
  text-align: center;
  display: inline-flex;
  justify-content: center;
  align-items: center;

}
.increaseTotalButton {
  border-left: none;
  border-radius: 0 5px 5px 0;
  margin-left:0;
}
.decreseTotalButton {
  margin-right:0;
  border-right: none;
  border-radius: 5px 0 0 5px;
}


/***********************Spreads last items of bar type cards if not a multiple of 3  */


/******************Panel 2*/
.Panel2 {
  max-height: 88vh;
  /* overflow-y: auto; */
  overflow: overlay;
  margin: 40px;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  grid-column-start: 2;
  
}


li.DefectItem { /*Each list item container (one for every defect)*/
  display: grid;
  grid-template-areas:
  'head head head head orientation  side'
  'loc loc loc loc loc loc';  
  list-style: none;
  padding-bottom: 35px;
  margin-top: 35px;
  border-bottom: 1px solid grey;
  align-items: center;
  margin-right: 30px;
}
/******************* Defect Number and defect type drop down*/
div.defectNumTypeContainer { /* Defect number and type drop down container*/
  display: flex;
  grid-area: head;
  justify-content: space-evenly;
}

div.defectNumTypeContainer > h2{ /*Defect number label for each defect item*/
  color: white;
  justify-self: center;
  margin: 0;
  cursor: default;
}
div.defectNumTypeContainer > select { /*dropdown select box*/
  height: 30px;
  width: 10em;
  font-size: .75em;
  justify-self: center;
  align-self: center;
}

/*****************************Location radio buttons */
form.locationRadioButtons { /*Location radio buttons CONTAINER*/
  width: 94%;
  grid-area: loc;
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  background-color: var(--radio-background-panel2);
  border-radius: 70px;
  justify-self: center;
}

form.locationRadioButtons > div label { /*Individual location radio button labels*/
  margin-left: 10px;
  cursor: pointer;
}

/******************************* Orientation toggle*/

li.DefectItem > button.ant-switch { /*Top Bottom toggle button*/
  width: 4.8em;
  font-size: .8em;
}

li.DefectItem div.ant-switch-handle::before { /*toggle dot when Bottom is selected*/
  background-color: var(--radio-background-panel2)
  
} 
li.DefectItem > .ant-switch {
  background-color: var(--card-background);
}
li.DefectItem > .ant-switch-checked > div.ant-switch-handle::before { /*toggle dot when Top is selected*/
  background-color: var(--background-color)
}
li.DefectItem > .ant-switch-checked {
  background-color: var(--radio-background-panel2)
}
li.DefectItem > .ant-switch-checked > .ant-switch-inner{ /*Toggle text when Top is selected*/
  color: black;
}
li.DefectItem > button:nth-of-type(1).orientation { /*top/bottom toggle when unchecked (bottom)*/
  grid-area: orientation;
  width: 3em;
}
li.DefectItem > button:nth-of-type(1).ant-switch-checked { /*top/bottom toggle when checked (top)*/
  width: 3em;
}
li.DefectItem button:nth-of-type(2).side{ /*A/B toggle */
  grid-area: side;
  width: 2.7em;
}

/****************************************scroll bar styling*/
::-webkit-scrollbar-track {/* Track */
  background: var(--background-color);  
}
::-webkit-scrollbar {/* width */
  width: 8px;
}
::-webkit-scrollbar-thumb {/* Handle */
  background: var(--card-background);
  border-radius: 7px;
}
::-webkit-scrollbar-thumb:hover {/* Handle on hover */
  background: #555; 
}
.defectReviewList::-webkit-scrollbar-track {/* Review page Track */
  background: var(--card-background);  
}
.defectReviewList::-webkit-scrollbar-thumb {/* Review page Handle */
  background: var(--background-color);
  border-radius: 7px;
}
.defectReviewList::-webkit-scrollbar-thumb:hover {/* Handle on hover */
  background: #555;  
}
@media only screen and (max-width: 1350px) {
  .appContainer {
    display: flex;
    flex-direction: column;
  }
  html, body {
    overflow:visible;
  }
  .Panel1 {
    width: 90vw;
    padding:15px;
    align-items: stretch;
    align-self: center;
  }
  .barTypeCard {
    width: auto;
  }
  .barTypeCard:nth-last-child(2):nth-child(3n + 1) {/*Second to last item if there are two widows*/
    grid-column-end: 4;
  }
  .barTypeCard:last-child:nth-child(3n - 1) { /*last item if there are 2 widows*/
    grid-column-end: -2;
  }
  .barTypeCard:last-child:nth-child(3n - 2) { /*last item if one widow*/
    grid-column-end:  5;
  }
}